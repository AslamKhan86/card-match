{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/youngsambyun/Documents/WORK/UI/card-match/src/components/card/CardView.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { withTheme, Icon, Toolbar } from 'react-native-material-ui';\nimport Card from \"../card/Card\";\nimport GameOver from \"../card/GameOver\";\nvar styles = StyleSheet.create({});\n\nvar CardView = function (_React$Component) {\n  _inherits(CardView, _React$Component);\n\n  function CardView() {\n    _classCallCheck(this, CardView);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CardView).apply(this, arguments));\n  }\n\n  _createClass(CardView, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          restartGame = _this$props.restartGame,\n          totalCount = _this$props.totalCount,\n          isGameOver = _this$props.isGameOver,\n          shuffledCard = _this$props.shuffledCard,\n          isFlipped = _this$props.isFlipped,\n          handleClick = _this$props.handleClick;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        }\n      }, isGameOver() ? React.createElement(GameOver, {\n        restartGame: restartGame,\n        totalCount: totalCount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        }\n      }) : React.createElement(\"div\", {\n        className: \"grid-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        }\n      }, shuffledCard.map(function (cardNumber, index) {\n        return React.createElement(Card, {\n          key: index,\n          id: index,\n          cardNumber: cardNumber,\n          isFlipped: isFlipped[index],\n          handleClick: handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          }\n        });\n      })));\n    }\n  }]);\n\n  return CardView;\n}(React.Component);\n\nexport default CardView;","map":{"version":3,"sources":["/Users/youngsambyun/Documents/WORK/UI/card-match/src/components/card/CardView.js"],"names":["React","PropTypes","withTheme","Icon","Toolbar","Card","GameOver","styles","StyleSheet","create","CardView","props","restartGame","totalCount","isGameOver","shuffledCard","isFlipped","handleClick","map","cardNumber","index","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;AAEA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,OAA1B,QAAyC,0BAAzC;AACA,OAAOC,IAAP;AACA,OAAOC,QAAP;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;;IAGMC,Q;;;;;;;;;;;6BACK;AAAA,wBAC6E,KAAKC,KADlF;AAAA,UACAC,WADA,eACAA,WADA;AAAA,UACaC,UADb,eACaA,UADb;AAAA,UACyBC,UADzB,eACyBA,UADzB;AAAA,UACqCC,YADrC,eACqCA,YADrC;AAAA,UACmDC,SADnD,eACmDA,SADnD;AAAA,UAC8DC,WAD9D,eAC8DA,WAD9D;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA,SACIH,UAAU,KAAK,oBAAC,QAAD;AAAU,QAAA,WAAW,EAAEF,WAAvB;AAAoC,QAAA,UAAU,EAAEC,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,QAAL,GACZ;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA,SAEKE,YAAY,CAACG,GAAb,CAAiB,UAACC,UAAD,EAAaC,KAAb;AAAA,eACf,oBAAC,IAAD;AACE,UAAA,GAAG,EAAEA,KADP;AAEE,UAAA,EAAE,EAAEA,KAFN;AAGE,UAAA,UAAU,EAAED,UAHd;AAIE,UAAA,SAAS,EAAEH,SAAS,CAACI,KAAD,CAJtB;AAKE,UAAA,WAAW,EAAEH,WALf;AAAA;AAAA;AAAA;AAAA;AAAA,UADe;AAAA,OAAjB,CAFL,CAFF,CADF;AAmBD;;;;EAtBoBjB,KAAK,CAACqB,S;;AAyB7B,eAAeX,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, View, Text, Button } from 'react-native';\nimport { withTheme, Icon, Toolbar } from 'react-native-material-ui';\nimport Card from '../card/Card';\nimport GameOver from '../card/GameOver';\n\nconst styles = StyleSheet.create({\n});\n\nclass CardView extends React.Component {\n  render() {\n    const {restartGame, totalCount, isGameOver, shuffledCard, isFlipped, handleClick} = this.props;\n    return (\n      <div>\n        { isGameOver() ? <GameOver restartGame={restartGame} totalCount={totalCount}/> :\n        <div className=\"grid-container\">\n           {\n             shuffledCard.map((cardNumber, index) =>\n               <Card\n                 key={index}\n                 id={index}\n                 cardNumber={cardNumber}\n                 isFlipped={isFlipped[index]}\n                 handleClick={handleClick}\n               />\n             )\n           }\n         </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default CardView;\n"]},"metadata":{},"sourceType":"module"}